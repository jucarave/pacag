<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_stand_front</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target[1] = y;
target[0] = x;

area = sys_get_point_area_index(x, y);

path = -1;
path_ind = -1;

action_list = ds_list_create();

state = E_PSM.STAND;
st_state = "_stand";
st_dir = "_front";

image_speed = 1/3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(action_list);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (x != target[0] || y != target[1]){
    var dir = degtorad(point_direction(x,y,target[0],target[1]));
    var _c = cos(dir) * 2;
    var _s = -sin(dir) * 2;
    
    state = E_PSM.WALK;
    
    if (x &lt; target[0]){
        x += _c;
        if (x &gt;= target[0]){ x = target[0]; }
    }else if (x &gt; target[0]){
        x += _c;
        if (x &lt;= target[0]){ x = target[0]; }
    }
    
    if (y &lt; target[1]){
        y += _s;
        if (y &gt;= target[1]){ y = target[1]; }
    }else if (y &gt; target[1]){
        y += _s;
        if (y &lt;= target[1]){ y = target[1]; }
    }
    
    if (x == target[0] &amp;&amp; y == target[1]){
        area = sys_get_point_area_index(x, y);
    
        if (path_ind != -1){
            var length = array_length_1d(path);
            path_ind += 1;
            
            if (path_ind * 2 &lt; length){
                target[0] = path[path_ind * 2];
                target[1] = path[path_ind * 2 + 1];
            }else{
                path = -1;
                path_ind = -1;
                state = E_PSM.STAND;
            }
        }else{
            state = E_PSM.STAND;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (x != target[0] || y != target[1]){
    ply_look_at(target[0], target[1]);
}

if (state == E_PSM.STAND){ st_state = "_stand"; }else
if (state == E_PSM.WALK){ st_state = "_walk"; }

var spr_name = "spr_player" + st_state + st_dir;
sprite_index = asset_get_index(spr_name);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_dialog.dialog_index != -1) exit;
if (ds_list_size(action_list) &gt; 0){
    ply_exec_action_list();
}

if (mouse_check_button_pressed(mb_left)){
    ply_cancel_actions();
    if (!ply_use_item(mouse_x, mouse_y)){
        if (!ply_move_to(mouse_x, mouse_y)){
            ply_find_near_path(mouse_x, mouse_y);
        }
    }
}else if (mouse_check_button_pressed(mb_right)){
    ply_cancel_actions();
    ply_check_item(mouse_x, mouse_y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
